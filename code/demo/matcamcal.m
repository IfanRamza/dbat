% Auto-generated by cameraCalibrator app on 08-May-2017
%-------------------------------------------------------


% Define images to process
imageFileNames = {'/externdisk/data/work/research/photo/camera_calibration/matlab_cv/IMG_4188.JPG',...
    '/externdisk/data/work/research/photo/camera_calibration/matlab_cv/IMG_4189.JPG',...
    '/externdisk/data/work/research/photo/camera_calibration/matlab_cv/IMG_4190.JPG',...
    '/externdisk/data/work/research/photo/camera_calibration/matlab_cv/IMG_4191.JPG',...
    '/externdisk/data/work/research/photo/camera_calibration/matlab_cv/IMG_4192.JPG',...
    '/externdisk/data/work/research/photo/camera_calibration/matlab_cv/IMG_4193.JPG',...
    '/externdisk/data/work/research/photo/camera_calibration/matlab_cv/IMG_4194.JPG',...
    '/externdisk/data/work/research/photo/camera_calibration/matlab_cv/IMG_4195.JPG',...
    '/externdisk/data/work/research/photo/camera_calibration/matlab_cv/IMG_4196.JPG',...
    '/externdisk/data/work/research/photo/camera_calibration/matlab_cv/IMG_4197.JPG',...
    '/externdisk/data/work/research/photo/camera_calibration/matlab_cv/IMG_4198.JPG',...
    '/externdisk/data/work/research/photo/camera_calibration/matlab_cv/IMG_4199.JPG',...
    '/externdisk/data/work/research/photo/camera_calibration/matlab_cv/IMG_4200.JPG',...
    '/externdisk/data/work/research/photo/camera_calibration/matlab_cv/IMG_4201.JPG',...
    '/externdisk/data/work/research/photo/camera_calibration/matlab_cv/IMG_4202.JPG',...
    '/externdisk/data/work/research/photo/camera_calibration/matlab_cv/IMG_4203.JPG',...
    };

if ~exist(imageFileNames{1})
    newNames=strrep(imageFileNames,'/externdisk/','/scratch/eddie/');
    if exist(newNames{1})
        imageFileNames=newNames;
    end
end

% Detect checkerboards in images
[imagePoints, boardSize, imagesUsed] = detectCheckerboardPoints(imageFileNames);
imageFileNames = imageFileNames(imagesUsed);

% Generate world coordinates of the corners of the squares
squareSize = 2.130000e+01;  % in units of 'mm'
worldPoints = generateCheckerboardPoints(boardSize, squareSize);

% Calibrate the camera
[cameraParams, imagesUsed, estimationErrors] = estimateCameraParameters(imagePoints, worldPoints, ...
    'EstimateSkew', false, 'EstimateTangentialDistortion', true, ...
    'NumRadialDistortionCoefficients', 2, 'WorldUnits', 'mm', ...
    'InitialIntrinsicMatrix', [], 'InitialRadialDistortion', []);

% View reprojection errors
h1=figure; showReprojectionErrors(cameraParams);

% Visualize pattern locations
h2=figure; showExtrinsics(cameraParams, 'CameraCentric');

% Display parameter estimation errors
displayErrors(estimationErrors, cameraParams);

% For example, you can use the calibration data to remove effects of lens distortion.
originalImage = imread(imageFileNames{1});
undistortedImage = undistortImage(originalImage, cameraParams);

% See additional examples of how to use the calibration data.  At the prompt type:
% showdemo('MeasuringPlanarObjectsExample')
% showdemo('StructureFromMotionExample')
